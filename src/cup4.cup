import java_cup.runtime.*;
import java.io.*;
import java.util.*;

action code {:
:};

parser code {:
    const int MAX = 15;
    int contador = 0;
    boolean error = false;
    Vector<int> constantes = new Vector<int>();
    Vector<String> variables = new Vector<String>();

    public static void main(String[] arg){
        if (arg.length!=1)
          System.out.println("Debe dar el nombre del fichero de entrada como parametro");
        else
        {
             String fileName=arg[0];
             AnalizadorLexico miAnalizadorLexico=null;
             parser parserObj=null;
             Symbol x=null;

             try{
               miAnalizadorLexico =
                 new AnalizadorLexico(new InputStreamReader(new FileInputStream(fileName)));

             } catch (IOException e){
               System.err.println("Fichero de entrada "+fileName+" no encontrado");
               System.exit(0);
             }
             try{
                parserObj = new parser(miAnalizadorLexico);
                parserObj.parse();
             } catch (Exception e) {
                e.printStackTrace();
                System.exit(0);
             } 
          } // end else
    }
:};

terminal PTOYCOMA;
terminal String LEER, VARIABLE, MOSTRAR, ASIGNACION, ABROCOMENTARIO, CIERROCOMENTARIO, COMENTARIOLINEA, NUMERO, SUMA, RESTA, MULTIPLICACION, DIVISION, CIERREPAR, ABREPAR;
non terminal String programa, lista_instrucciones, instruccion, operando, operador, operacion;

/* Gramatica */
start with programa;

programa ::= lista_instrucciones:li {: System.out.println(li); :};

lista_instrucciones ::= instruccion:i {:RESULT = i;:} | instruccion lista_instrucciones{: li = li+i; RESULT = i; :};

instruccion ::= LEER VARIABLE:v PTOYCOMA {:
                    if(!ht.containsKey(v) && contador <= MAX){
                        ht.put(v,"M"+contador);
                        contador++;
						
                    System.out.println("leer " + v + "\n"
                    + "     #obtenerel valor de " + v + "\n"
                    + "     li      $v0, 5          #carga la llamda de lectura en v0\n"
                    + "     syscall                 #hacer la llmada al sistema\n"
                    + "     sw      $v0,var_" + v + "    #stoe in memory\n");
                    }:}
                |
                MOSTRAR VARIABLE:v PTOYCOMA {:
                    if(!ht.contains(v)){
                        System.out.println("Error!: No se ha definido la variable " + v + " en linea " + (vleft+1) + " columna " + (vright+1));}
                    else{
                        System.out.println("     #Mostrar el valor de " + v + " en la consola\n" 
                        + "     lw      $a0, var_" + v + "   # load in a0\n" 
                        + "     li      $v0, 1          # cargar la llamada de escritura en v0\n"
                        + "     syscall                 # hacer la llamada al sistema");}
                :}
                |
                operacion:o {:RESULT = o;:}
                |
                ABROCOMENTARIO CIERROCOMENTARIO {:
                    System.out.println("ABRO COMENTARIO");
                    System.out.println("CIERRO COMENTARIO");
                :}
                |
                COMENTARIOLINEA {: :}
                |
                error PTOYCOMA:p
                {: 
                        System.out.println("Error en linea: " + (pleft+1));
                :};

operacion ::= VARIABLE:v ASIGNACION operando:va operador:op operando:var PTOYCOMA {:
                        System.out.println("	lw	$t1, va	#primer operando en $t1"
                        + "	lw	$t2, var	#segundo operador en $t2"
                        + 	op	" $t0,$t1,$t2	#aritmetic operation" 	
                        + "	sw 	$t0, var_" + v);
					
                    if(!ht.contains(v))
                        ht.addElement(v);
                    else
                        System.out.println("Error! :Variable ya definida");
                :}
                |
                ABREPAR operacion:o CIERREPAR {:RESULT = o;:};

operando ::= VARIABLE:v {: 
                if(!ht.contains(v))
                    System.out.println("Error!: No se ha definido la variable " + v + " en linea " + (vleft+1) + " columna " + (vright+1));
                else
                    RESULT = v;:}
            | 
            NUMERO:n {: RESULT = "#" + n;:};

operador ::= SUMA {: Result = "ADD";:} 
            | 
            RESTA {:Result = "SUB"; :}
            | 
            DIVISION {: Result = "DIV"; :}
            | 
            MULTIPLICACION {: Result = "MUL"; :};
